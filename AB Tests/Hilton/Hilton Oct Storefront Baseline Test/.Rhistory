library(XLConnect)
library("XLConnect")
any(grepl("XLConnect",
installed.packages()))
install.packages("XLConnect")
any(grepl("XLConnect",
installed.packages()))
library("XLConnect")
df <- read.csv("C:\Users\kelvin.ye\Google Drive\My Documents\Analytics-Kelvin\PCA\United\2017_02\UA Buy Mass Up to 50% Bonus (27 Feb-20 Apr, 2017)\AB test significance testing\AB Test Txn Raw.csv",header = FALSE,sep = ",")
df <- read.csv("C:/Users/kelvin.ye/Google Drive/My Documents/Analytics-Kelvin/PCA/United/2017_02/UA Buy Mass Up to 50% Bonus (27 Feb-20 Apr, 2017)/AB test significance testing/AB Test Txn Raw.csv",header = FALSE,sep = ",")
View(df)
##load packages
library(ggplot2)
library(nortest)
library(car)
library(plyr)
library(coin)
install.packages("ggplot2")
install.packages("nortets")
install.packages("nortest")
install.packages("car")
install.packages("plyr")
install.packages("coin")
##load packages
library(ggplot2)
library(nortest)
library(car)
library(plyr)
library(coin)
install.packages("installr")
library(installr)
updateR()
library(Rserve)
Rserve()
Rserve(args="--no-save")
h2o.init()
prosPath <- system.file("extdata", "prostate.csv", package="h2o")
prostate.hex <- h2o.uploadFile(path = prosPath)
prostate.hex[,2] <- as.factor(prostate.hex[,2])
summary(prostate.hex)
library(Rserve)
Rserve()
Rserve(args="--no-save")
library(Rserve)
Rserve()
Rserve(args="--no-save")
library(Rserve)
Rserve()
Rserve(args="--no-save")
library(Rserve)
Rserve()
Rserve(args="--no-save")
#########################################
###### Sample Chi Square ###################
#########################################
### create matrix of data
con_h<-matrix(c(1870,7284,12371,46220), ncol=2, byrow=TRUE)
#label the rows and columns
colnames(con_h)<-c("test","control")
rownames(con_h)<-c("transactions", "audience")
#convert object to a contingency table
con_h<-as.table(con_h)
con_h
#run chi-square test
chisq.test(con_h)
?Chisquare
con_h
#########################################
###### Sample Chi Square ###################
#########################################
### create matrix of data
con_h<-matrix(c(695,619,3367,3287), ncol=2, byrow=TRUE)
#label the rows and columns
colnames(con_h)<-c("test","control")
rownames(con_h)<-c("transactions", "audience")
#convert object to a contingency table
con_h<-as.table(con_h)
con_h
chisq.test(con_h)    # 0.06439 insignificant
#########################################
###### Sample Chi Square ###################
#########################################
### create matrix of data
con_h<-matrix(c(481,538,5370,5871), ncol=2, byrow=TRUE)
#label the rows and columns
colnames(con_h)<-c("test","control")
rownames(con_h)<-c("transactions", "audience")
#convert object to a contingency table
con_h<-as.table(con_h)
con_h
#run chi-square test
chisq.test(con_h)    # 0.06439 insignificant
## if p value <= 0.05 the result is significant
## if p value is > 0.05 and  <= 0.1 the result is marginally significant
## if p value > 0.1 then result is not significant
#########################################
###### Sample Chi Square ###################
#########################################
### create matrix of data
con_h<-matrix(c(657,687,6702,7231), ncol=2, byrow=TRUE)
#label the rows and columns
colnames(con_h)<-c("test","control")
rownames(con_h)<-c("transactions", "audience")
#convert object to a contingency table
con_h<-as.table(con_h)
con_h
chisq.test(con_h)    # 0.06439 insignificant
##load packages
library(ggplot2)
library(nortest)
library(car)
library(plyr)
library(coin)
## Set working directory
setwd("C:/Users/kelvin.ye/workplace/data-wizards/AB Tests/Hilton/Hilton Oct Storefront Baseline Test")
##Load in data - I usually filter out sessions in Alteryx
df1<-read.csv("ATS_filtered.csv", header=T)
## summarize data
summary(df1)
## check data types
str(df1)
##subset data into high/med as well as mass
df1<-subset(df1, df1$Test_Type=="Test" |  df1$Test_Type=="Control")
##df1_med<-subset(df1, df1$Test_Type=="Mass Control IHG" |  df1$Test_Type=="Mass Test IHG")
df1<-subset(df1, df1$ATS != 0)
summary(df1)
a_high <-ggplot(df1, aes(x = ATS, fill = Test_Type)) + geom_histogram(position="dodge")
a_high
##a_med <-ggplot(df1_med, aes(x = ATS, fill = Test_Type)) + geom_histogram(position="dodge")
##a_med
## Plot log-transformed distribution for tests and control points purchased
##
b_high <-ggplot(df1, aes(x = log(ATS), fill = Test_Type)) + geom_histogram(position="dodge")
b_high
##b_med_log <- ggplot(df1_med, aes(x = log(ATS), fill = Test_Type)) + geom_histogram(position="dodge")
##b_med_log
## Plot average points purchased by test and control
p_high<-ggplot(df1, aes(y = ATS, x=Test_Type, fill=Test_Type))+ stat_summary(fun.y="mean", geom="bar")
p_high + labs(y="Average Points Purchased", x="Offer") + theme(axis.text.x = element_text(colour="black",size=14), axis.title.x=element_text(colour="black",size=14), axis.text.y = element_text(colour="black",size=14), axis.title.y=element_text(colour="black",size=14) )
#test Points normality high
ad.test(subset(df1, df1$Test_Type=="Control")$ATS)
cvm.test(subset(df1, df1$Test_Type=="Control")$ATS)
shapiro.test(subset(df1, df1$Test_Type=="Control")$ATS)
ad.test(subset(df1, df1$Test_Type=="Test")$ATS)
cvm.test(subset(df1, df1$Test_Type=="Test")$ATS)
shapiro.test(subset(df1, df1$Test_Type=="Test")$ATS)
## Step 2: assess variance between Test_Types
##look at variance
##df1
var(subset(df1, df1$Test_Type=="Test")$ATS)
var(subset(df1, df1$Test_Type=="Control")$ATS)
## Bartlett Test
#raw data 35
bartlett.test(df1$ATS~df1$Test_Type, data=df1) #variance not significantly different
#log transformed data 35
bartlett.test(log(df1$ATS)~df1$Test_Type, data=df1) #variance not significantly different
wilcox.test(df1$ATS~df1$Test_Type, conf.level=0.05) #0.2104 not significant
t.test(log(df1$ATS)~df1$Test_Type, conf.level=0.05, var.equal=FALSE) #0.3239 not significant
kruskal.test(ATS~Test_Type, data=df1) #0.3837 not significant
